/*
 * ---------------------------------------------------------------------
 *  lifebit-ai/simulate test_sim_cb_output_query config file
 * ---------------------------------------------------------------------
 * Defines bundled input files and everything required
 * to run a fast and simple test. Use as follows:
 * nextflow run main.nf -profile test_sim_cb_output_query
 */


docker.enabled = true

params  {
    num_participants = 40
    simulate_vcf = true
    simulate_plink = true
    simulate_gwas_sum_stats = true
    gwas_cases = 20
    gwas_controls = 20
    reference_1000G = "https://lifebit-featured-datasets.s3-eu-west-1.amazonaws.com/projects/gel/simulate/simulate-ci-testing/ALL_1000G_phase1integrated_v3_impute.tgz"
    legend_for_hapgen2 = "https://lifebit-featured-datasets.s3-eu-west-1.amazonaws.com/projects/gel/simulate/simulate-ci-testing/all_leg_chr21.tar.gz"
    simulate_cb_output = "yes"
    simulate_cb_query_file = "testdata/query.json"
    simulate_cb_pheno_metadata = "s3://lifebit-featured-datasets/projects/gel/gel-gwas/metadata.csv"
    simulate_cb_pheno_col_name = "Specimen type" 
    simulate_cb_pheno_col_type = "Categorical" 
    simulate_cb_pheno_col_fraction_of_cases = 0.5 
    simulate_cb_pheno_col_case_group = "NOSE"
    // Limit resources so that this can run on GitHub Actions
    max_cpus = 2
}

process {

  withLabel: high_memory {
    cpus = 2
  }

}